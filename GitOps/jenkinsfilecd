@Library('Shared') _
pipeline {
    agent any
    
    environment {
    Application_DOCKER_TAG = 'your_value_here'
    }

    parameters {
        string(name: 'Application_DOCKER_TAG', defaultValue: '', description: 'Streamlit Applications Docker tag of the image built by the CI job')
    }

    stages {
        stage("Workspace cleanup"){
            steps{
                script{
                    cleanWs()
                }
            }
        }
        
        stage('Git: Code Checkout') {
            steps {
                script{
                    code_checkout("https://github.com/mv2727/streamlit-app.git","master")
                }
            }
        }
        
        stage('Verify: Docker Image Tags') {
            steps {
                script{
                    echo "Application_DOCKER_TAG: ${params.Application_DOCKER_TAG}"
                }
            }
        }
        
        
        stage("Update: Kubernetes manifests"){
            steps{
                script{
                    dir('kubernetes'){
                        sh """
                            sed -i -e s/streamlit-app.*/streamlit-app:${params.Application_DOCKER_TAG}/g deployment.yaml
                        """
                    }
                }
            }
        }
        
        stage("Git: Code update and push to GitHub"){
            steps{
                script{
                    withCredentials([gitUsernamePassword(credentialsId: 'GitHub', gitToolName: 'Default')]) {
                        sh '''
                        echo "Checking repository status: "
                        git status
                    
                        echo "Adding changes to git: "
                        git add .
                        
                        echo "Commiting changes: "
                        git commit -m "Updated environment variables"
                        
                        echo "Pushing changes to github: "
                        git push https://github.com/mv2727/streamlit-app.git master
                    '''
                    }
                }
            }
        }
    }
      post {
        success {
            echo 'Pipeline completed successfully!'
            }
        failure {
            echo 'Pipeline failed.'
            }
        }
    }
